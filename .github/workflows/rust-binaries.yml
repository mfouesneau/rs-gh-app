name: Release

permissions:
  contents: write

on:
  workflow_call:
  workflow_dispatch:
  release:
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (optional) Path to changelog.
          changelog: CHANGELOG.md
          allow-missing-changelog: true
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          # Universal macOS binary is supported as universal-apple-darwin.
          - target: universal-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install OpenSSL and cross toolchain (Linux & matrix)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          TARGET="${{ matrix.target }}"
          case "$TARGET" in
            x86_64-unknown-linux-gnu)
              sudo apt-get install -y pkg-config libssl-dev
              echo "OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV
              echo "OPENSSL_INCLUDE_DIR=/usr/include" >> $GITHUB_ENV
              echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
              ;;
            aarch64-unknown-linux-gnu)
              sudo dpkg --add-architecture arm64
              sudo apt-get update
              sudo apt-get install -y gcc-aarch64-linux-gnu pkg-config:arm64 libssl-dev:arm64
              echo "OPENSSL_LIB_DIR=/usr/lib/aarch64-linux-gnu" >> $GITHUB_ENV
              echo "OPENSSL_INCLUDE_DIR=/usr/include" >> $GITHUB_ENV
              echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV
              ;;
            armv7-unknown-linux-gnueabihf)
              sudo dpkg --add-architecture armhf
              sudo apt-get update
              sudo apt-get install -y gcc-arm-linux-gnueabihf pkg-config:armhf libssl-dev:armhf
              echo "OPENSSL_LIB_DIR=/usr/lib/arm-linux-gnueabihf" >> $GITHUB_ENV
              echo "OPENSSL_INCLUDE_DIR=/usr/include" >> $GITHUB_ENV
              echo "PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig" >> $GITHUB_ENV
              ;;
            *)
              echo "Unsupported target: $TARGET"
              exit 1
              ;;
          esac
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
          # Note that glob pattern is not supported yet.
          bin: rs-gh-app
          # (optional) Target triple, default is host triple.
          target: ${{ matrix.target }}
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
